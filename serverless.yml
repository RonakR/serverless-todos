service: serverless-todos

custom:
  todosTableName: todos
  todosCompletedSnsTopic: todosCompleted

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs4.3
  environment:
    TODOS_TABLE: '${self:custom.todosTableName}'
    COMPLETED_TOPIC: '${self:custom.todosCompletedSnsTopic}'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:*:*:*"
    - Effect: Allow
      Action:
        - sns:*
      Resource: '*'

functions:
  todos:
    handler: handler.todosHandler
    description: Handles endpoints for Todos
    name: TodosHandler
    events:
      - http:
          path: /todos
          method: get
      - http:
          path: /todos
          method: post
      - http:
          path: /todos/{id}
          method: put
      - http:
          path: /todos/{id}
          method: delete
  completed:
    handler: handler.completedHandler
    description: Handles couting of completed tasks
    name: completedHandler
    events:
      - schedule: rate(1 minute)
  snsListner:
    handler: handler.snsListner
    description: Listens to SNS topics
    events:
      - sns: '${self:custom.todosCompletedSnsTopic}'

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: completed
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          -
            IndexName: completedIndex
            KeySchema:
              -
                AttributeName: completed
                KeyType: HASH
              -
                AttributeName: id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

        TableName: '${self:custom.todosTableName}'