service: serverless-todos

custom:
  todosTableName: todos

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs4.3
  environment:
    TODOS_TABLE: '${self:custom.todosTableName}'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:*:*:*"

functions:
  todos:
    handler: handler.todos
    description: Handles endpoints for Todos
    name: TodosHandler
    events:
      - http:
          path: /todos
          method: get
      - http:
          path: /todos
          method: post
      - http:
          path: /todos
          method: put
      - http:
          path: /todos
          method: delete

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: '${self:custom.todosTableName}'